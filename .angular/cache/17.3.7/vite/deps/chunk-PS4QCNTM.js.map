{
  "version": 3,
  "sources": ["../../../../../node_modules/@videogular/ngx-videogular/fesm2022/videogular-ngx-videogular-core.mjs"],
  "sourcesContent": ["import * as i0 from '@angular/core';\nimport { Injectable, EventEmitter, Directive, Output, Input, Component, ViewEncapsulation, HostBinding, ContentChildren, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Subject, fromEvent, Observable, combineLatest, timer } from 'rxjs';\nimport { map } from 'rxjs/operators';\nconst _c0 = [\"*\"];\nclass VgStates {\n  static {\n    this.VG_ENDED = 'ended';\n  }\n  static {\n    this.VG_PAUSED = 'paused';\n  }\n  static {\n    this.VG_PLAYING = 'playing';\n  }\n  static {\n    this.VG_LOADING = 'waiting';\n  }\n  /** @nocollapse */\n  static {\n    this.ɵfac = function VgStates_Factory(t) {\n      return new (t || VgStates)();\n    };\n  }\n  /** @nocollapse */\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: VgStates,\n      factory: VgStates.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(VgStates, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\nclass VgApiService {\n  constructor() {\n    this.medias = {}; // TODO: refactor to Set<IPlayable>\n    this.playerReadyEvent = new EventEmitter(true);\n    this.isPlayerReady = false;\n  }\n  onPlayerReady(fsAPI) {\n    this.fsAPI = fsAPI;\n    this.isPlayerReady = true;\n    this.playerReadyEvent.emit(this);\n  }\n  getDefaultMedia() {\n    for (const item in this.medias) {\n      if (this.medias[item]) {\n        return this.medias[item];\n      }\n    }\n  }\n  getMasterMedia() {\n    let master;\n    for (const id in this.medias) {\n      if (this.medias[id].vgMaster === 'true' || this.medias[id].vgMaster === true) {\n        master = this.medias[id];\n        break;\n      }\n    }\n    return master || this.getDefaultMedia();\n  }\n  isMasterDefined() {\n    let result = false;\n    for (const id in this.medias) {\n      if (this.medias[id].vgMaster === 'true' || this.medias[id].vgMaster === true) {\n        result = true;\n        break;\n      }\n    }\n    return result;\n  }\n  getMediaById(id = null) {\n    let media = this.medias[id];\n    if (!id || id === '*') {\n      media = this;\n    }\n    return media;\n  }\n  play() {\n    for (const id in this.medias) {\n      if (this.medias[id]) {\n        this.medias[id].play();\n      }\n    }\n  }\n  pause() {\n    for (const id in this.medias) {\n      if (this.medias[id]) {\n        this.medias[id].pause();\n      }\n    }\n  }\n  get duration() {\n    return this.$$getAllProperties('duration');\n  }\n  set currentTime(seconds) {\n    this.$$setAllProperties('currentTime', seconds);\n  }\n  get currentTime() {\n    return this.$$getAllProperties('currentTime');\n  }\n  set state(state) {\n    this.$$setAllProperties('state', state);\n  }\n  get state() {\n    return this.$$getAllProperties('state');\n  }\n  set volume(volume) {\n    this.$$setAllProperties('volume', volume);\n  }\n  get volume() {\n    return this.$$getAllProperties('volume');\n  }\n  set playbackRate(rate) {\n    this.$$setAllProperties('playbackRate', rate);\n  }\n  get playbackRate() {\n    return this.$$getAllProperties('playbackRate');\n  }\n  get canPlay() {\n    return this.$$getAllProperties('canPlay');\n  }\n  get canPlayThrough() {\n    return this.$$getAllProperties('canPlayThrough');\n  }\n  get isMetadataLoaded() {\n    return this.$$getAllProperties('isMetadataLoaded');\n  }\n  get isWaiting() {\n    return this.$$getAllProperties('isWaiting');\n  }\n  get isCompleted() {\n    return this.$$getAllProperties('isCompleted');\n  }\n  get isLive() {\n    return this.$$getAllProperties('isLive');\n  }\n  get isMaster() {\n    return this.$$getAllProperties('isMaster');\n  }\n  get time() {\n    return this.$$getAllProperties('time');\n  }\n  get buffer() {\n    return this.$$getAllProperties('buffer');\n  }\n  get buffered() {\n    return this.$$getAllProperties('buffered');\n  }\n  get subscriptions() {\n    return this.$$getAllProperties('subscriptions');\n  }\n  get textTracks() {\n    return this.$$getAllProperties('textTracks');\n  }\n  seekTime(value, byPercent = false) {\n    for (const id in this.medias) {\n      if (this.medias[id]) {\n        this.$$seek(this.medias[id], value, byPercent);\n      }\n    }\n  }\n  $$seek(media, value, byPercent = false) {\n    let second;\n    let duration = media.duration;\n    if (byPercent) {\n      if (this.isMasterDefined()) {\n        duration = this.getMasterMedia().duration;\n      }\n      second = value * duration / 100;\n    } else {\n      second = value;\n    }\n    media.currentTime = second;\n  }\n  addTextTrack(type, label, language) {\n    for (const id in this.medias) {\n      if (this.medias[id]) {\n        this.$$addTextTrack(this.medias[id], type, label, language);\n      }\n    }\n  }\n  $$addTextTrack(media, type, label, language) {\n    media.addTextTrack(type, label, language);\n  }\n  $$getAllProperties(property) {\n    const medias = {};\n    let result;\n    for (const id in this.medias) {\n      if (this.medias[id]) {\n        medias[id] = this.medias[id];\n      }\n    }\n    const nMedias = Object.keys(medias).length;\n    switch (nMedias) {\n      case 0:\n        // Return default values until vgMedia is initialized\n        switch (property) {\n          case 'state':\n            result = VgStates.VG_PAUSED;\n            break;\n          case 'playbackRate':\n          case 'volume':\n            result = 1;\n            break;\n          case 'time':\n            result = {\n              current: 0,\n              total: 0,\n              left: 0\n            };\n            break;\n        }\n        break;\n      case 1:\n        // If there's only one media element then return the plain value\n        const firstMediaId = Object.keys(medias)[0];\n        result = medias[firstMediaId][property];\n        break;\n      default:\n        // TODO: return 'master' value\n        const master = this.getMasterMedia();\n        result = medias[master.id][property];\n    }\n    return result;\n  }\n  $$setAllProperties(property, value) {\n    for (const id in this.medias) {\n      if (this.medias[id]) {\n        this.medias[id][property] = value;\n      }\n    }\n  }\n  registerElement(elem) {\n    this.videogularElement = elem;\n  }\n  registerMedia(media) {\n    this.medias[media.id] = media;\n  }\n  unregisterMedia(media) {\n    delete this.medias[media.id];\n  }\n  /** @nocollapse */\n  static {\n    this.ɵfac = function VgApiService_Factory(t) {\n      return new (t || VgApiService)();\n    };\n  }\n  /** @nocollapse */\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: VgApiService,\n      factory: VgApiService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(VgApiService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\nclass VgControlsHiddenService {\n  constructor() {\n    this.isHiddenSubject = new Subject();\n    this.isHidden = this.isHiddenSubject.asObservable();\n  }\n  state(hidden) {\n    this.isHiddenSubject.next(hidden);\n  }\n  /** @nocollapse */\n  static {\n    this.ɵfac = function VgControlsHiddenService_Factory(t) {\n      return new (t || VgControlsHiddenService)();\n    };\n  }\n  /** @nocollapse */\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: VgControlsHiddenService,\n      factory: VgControlsHiddenService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(VgControlsHiddenService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\nclass VgUtilsService {\n  /**\n   * Inspired by Paul Irish\n   * https://gist.github.com/paulirish/211209\n   */\n  static getZIndex() {\n    let zIndex = 1;\n    let elementZIndex;\n    const tags = document.getElementsByTagName('*');\n    for (let i = 0, l = tags.length; i < l; i++) {\n      elementZIndex = parseInt(window.getComputedStyle(tags[i])['z-index'], 10);\n      if (elementZIndex > zIndex) {\n        zIndex = elementZIndex + 1;\n      }\n    }\n    return zIndex;\n  }\n  // Very simple mobile detection, not 100% reliable\n  static isMobileDevice() {\n    // return (\n    //   typeof window.screen.orientation !== 'undefined' ||\n    //   navigator.userAgent.indexOf('IEMobile') !== -1\n    // );\n    // window.orientation is deprecated and we should use window.screen.orientation\n    return typeof window.orientation !== 'undefined' || navigator.userAgent.indexOf('IEMobile') !== -1;\n  }\n  static isiOSDevice() {\n    return (navigator.userAgent.match(/ip(hone|ad|od)/i) || VgUtilsService.isIpadOS()) && !navigator.userAgent.match(/(iemobile)[\\/\\s]?([\\w\\.]*)/i);\n  }\n  static isIpadOS() {\n    return navigator.maxTouchPoints && navigator.maxTouchPoints > 2 && /MacIntel/.test(navigator.platform);\n  }\n  static isCordova() {\n    return document.URL.indexOf('http://') === -1 && document.URL.indexOf('https://') === -1;\n  }\n  /** @nocollapse */\n  static {\n    this.ɵfac = function VgUtilsService_Factory(t) {\n      return new (t || VgUtilsService)();\n    };\n  }\n  /** @nocollapse */\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: VgUtilsService,\n      factory: VgUtilsService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(VgUtilsService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\nclass VgFullscreenApiService {\n  constructor() {\n    this.nativeFullscreen = true;\n    this.isFullscreen = false;\n    this.onChangeFullscreen = new EventEmitter();\n  }\n  init(elem, medias) {\n    this.videogularElement = elem;\n    this.medias = medias;\n    const APIs = {\n      w3: {\n        enabled: 'fullscreenEnabled',\n        element: 'fullscreenElement',\n        request: 'requestFullscreen',\n        exit: 'exitFullscreen',\n        onchange: 'fullscreenchange',\n        onerror: 'fullscreenerror'\n      },\n      newWebkit: {\n        enabled: 'webkitFullscreenEnabled',\n        element: 'webkitFullscreenElement',\n        request: 'webkitRequestFullscreen',\n        exit: 'webkitExitFullscreen',\n        onchange: 'webkitfullscreenchange',\n        onerror: 'webkitfullscreenerror'\n      },\n      oldWebkit: {\n        enabled: 'webkitIsFullScreen',\n        element: 'webkitCurrentFullScreenElement',\n        request: 'webkitRequestFullScreen',\n        exit: 'webkitCancelFullScreen',\n        onchange: 'webkitfullscreenchange',\n        onerror: 'webkitfullscreenerror'\n      },\n      moz: {\n        enabled: 'mozFullScreen',\n        element: 'mozFullScreenElement',\n        request: 'mozRequestFullScreen',\n        exit: 'mozCancelFullScreen',\n        onchange: 'mozfullscreenchange',\n        onerror: 'mozfullscreenerror'\n      },\n      ios: {\n        enabled: 'webkitFullscreenEnabled',\n        element: 'webkitFullscreenElement',\n        request: 'webkitEnterFullscreen',\n        exit: 'webkitExitFullscreen',\n        onchange: 'webkitendfullscreen',\n        onerror: 'webkitfullscreenerror'\n      },\n      ms: {\n        enabled: 'msFullscreenEnabled',\n        element: 'msFullscreenElement',\n        request: 'msRequestFullscreen',\n        exit: 'msExitFullscreen',\n        onchange: 'MSFullscreenChange',\n        onerror: 'MSFullscreenError'\n      }\n    };\n    for (const browser in APIs) {\n      if (APIs[browser].enabled in document) {\n        this.polyfill = APIs[browser];\n        break;\n      }\n    }\n    if (VgUtilsService.isiOSDevice()) {\n      this.polyfill = APIs.ios;\n    }\n    this.isAvailable = this.polyfill != null;\n    if (this.polyfill == null) {\n      return;\n    }\n    let fsElemDispatcher;\n    switch (this.polyfill.onchange) {\n      // Mozilla dispatches the fullscreen change event from document, not the element\n      // See: https://bugzilla.mozilla.org/show_bug.cgi?id=724816#c3\n      case 'mozfullscreenchange':\n        fsElemDispatcher = document;\n        break;\n      // iOS dispatches the fullscreen change event from video element\n      case 'webkitendfullscreen':\n        fsElemDispatcher = this.medias.toArray()[0].elem;\n        break;\n      // HTML5 implementation dispatches the fullscreen change event from the element\n      default:\n        fsElemDispatcher = elem;\n    }\n    this.fsChangeSubscription = fromEvent(fsElemDispatcher, this.polyfill.onchange).subscribe(() => {\n      this.onFullscreenChange();\n    });\n  }\n  onFullscreenChange() {\n    this.isFullscreen = !!document[this.polyfill.element];\n    this.onChangeFullscreen.emit(this.isFullscreen);\n  }\n  toggleFullscreen(element = null) {\n    if (this.isFullscreen) {\n      this.exit();\n    } else {\n      this.request(element);\n    }\n  }\n  request(elem) {\n    if (!elem) {\n      elem = this.videogularElement;\n    }\n    this.isFullscreen = true;\n    this.onChangeFullscreen.emit(true);\n    // Perform native full screen support\n    if (this.isAvailable && this.nativeFullscreen) {\n      // Fullscreen for mobile devices\n      if (VgUtilsService.isMobileDevice()) {\n        // We should make fullscreen the video object if it doesn't have native fullscreen support\n        // Fallback! We can't set vg-player on fullscreen, only video/audio objects\n        if (!this.polyfill.enabled && elem === this.videogularElement || VgUtilsService.isiOSDevice()) {\n          elem = this.medias.toArray()[0].elem;\n        }\n        this.enterElementInFullScreen(elem);\n      } else {\n        this.enterElementInFullScreen(this.videogularElement);\n      }\n    }\n  }\n  enterElementInFullScreen(elem) {\n    elem[this.polyfill.request]();\n  }\n  exit() {\n    this.isFullscreen = false;\n    this.onChangeFullscreen.emit(false);\n    // Exit from native fullscreen\n    if (this.isAvailable && this.nativeFullscreen) {\n      document[this.polyfill.exit]();\n    }\n  }\n  /** @nocollapse */\n  static {\n    this.ɵfac = function VgFullscreenApiService_Factory(t) {\n      return new (t || VgFullscreenApiService)();\n    };\n  }\n  /** @nocollapse */\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: VgFullscreenApiService,\n      factory: VgFullscreenApiService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(VgFullscreenApiService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\nclass VgEvents {\n  static {\n    this.VG_ABORT = 'abort';\n  }\n  static {\n    this.VG_CAN_PLAY = 'canplay';\n  }\n  static {\n    this.VG_CAN_PLAY_THROUGH = 'canplaythrough';\n  }\n  static {\n    this.VG_DURATION_CHANGE = 'durationchange';\n  }\n  static {\n    this.VG_EMPTIED = 'emptied';\n  }\n  static {\n    this.VG_ENCRYPTED = 'encrypted';\n  }\n  static {\n    this.VG_ENDED = 'ended';\n  }\n  static {\n    this.VG_ERROR = 'error';\n  }\n  static {\n    this.VG_LOADED_DATA = 'loadeddata';\n  }\n  static {\n    this.VG_LOADED_METADATA = 'loadedmetadata';\n  }\n  static {\n    this.VG_LOAD_START = 'loadstart';\n  }\n  static {\n    this.VG_PAUSE = 'pause';\n  }\n  static {\n    this.VG_PLAY = 'play';\n  }\n  static {\n    this.VG_PLAYING = 'playing';\n  }\n  static {\n    this.VG_PROGRESS = 'progress';\n  }\n  static {\n    this.VG_RATE_CHANGE = 'ratechange';\n  }\n  static {\n    this.VG_SEEK = 'seek';\n  }\n  static {\n    this.VG_SEEKED = 'seeked';\n  }\n  static {\n    this.VG_SEEKING = 'seeking';\n  }\n  static {\n    this.VG_STALLED = 'stalled';\n  }\n  static {\n    this.VG_SUSPEND = 'suspend';\n  }\n  static {\n    this.VG_TIME_UPDATE = 'timeupdate';\n  }\n  static {\n    this.VG_VOLUME_CHANGE = 'volumechange';\n  }\n  static {\n    this.VG_WAITING = 'waiting';\n  }\n  static {\n    this.VG_LOAD = 'load';\n  }\n  static {\n    this.VG_ENTER = 'enter';\n  }\n  static {\n    this.VG_EXIT = 'exit';\n  }\n  static {\n    this.VG_START_ADS = 'startads';\n  }\n  static {\n    this.VG_END_ADS = 'endads';\n  }\n  /** @nocollapse */\n  static {\n    this.ɵfac = function VgEvents_Factory(t) {\n      return new (t || VgEvents)();\n    };\n  }\n  /** @nocollapse */\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: VgEvents,\n      factory: VgEvents.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(VgEvents, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\nclass VgCuePointsDirective {\n  constructor(ref) {\n    this.ref = ref;\n    this.onEnterCuePoint = new EventEmitter();\n    this.onUpdateCuePoint = new EventEmitter();\n    this.onExitCuePoint = new EventEmitter();\n    this.onCompleteCuePoint = new EventEmitter();\n    this.subscriptions = [];\n    this.cuesSubscriptions = [];\n    this.totalCues = 0;\n  }\n  ngOnInit() {\n    this.onLoad$ = fromEvent(this.ref.nativeElement, VgEvents.VG_LOAD);\n    this.subscriptions.push(this.onLoad$.subscribe(this.onLoad.bind(this)));\n  }\n  onLoad(event) {\n    const cues = event.target.track.cues;\n    this.ref.nativeElement.cues = cues;\n    this.updateCuePoints(cues);\n  }\n  updateCuePoints(cues) {\n    this.cuesSubscriptions.forEach(s => s.unsubscribe());\n    for (let i = 0, l = cues.length; i < l; i++) {\n      this.onEnter$ = fromEvent(cues[i], VgEvents.VG_ENTER);\n      this.cuesSubscriptions.push(this.onEnter$.subscribe(this.onEnter.bind(this)));\n      this.onExit$ = fromEvent(cues[i], VgEvents.VG_EXIT);\n      this.cuesSubscriptions.push(this.onExit$.subscribe(this.onExit.bind(this)));\n    }\n  }\n  onEnter(event) {\n    this.onEnterCuePoint.emit(event.target);\n  }\n  onExit(event) {\n    this.onExitCuePoint.emit(event.target);\n  }\n  ngDoCheck() {\n    if (this.ref.nativeElement.track && this.ref.nativeElement.track.cues) {\n      const changes = this.totalCues !== this.ref.nativeElement.track.cues.length;\n      if (changes) {\n        this.totalCues = this.ref.nativeElement.track.cues.length;\n        this.ref.nativeElement.cues = this.ref.nativeElement.track.cues;\n        this.updateCuePoints(this.ref.nativeElement.track.cues);\n      }\n    }\n  }\n  ngOnDestroy() {\n    this.subscriptions.forEach(s => s.unsubscribe());\n  }\n  /** @nocollapse */\n  static {\n    this.ɵfac = function VgCuePointsDirective_Factory(t) {\n      return new (t || VgCuePointsDirective)(i0.ɵɵdirectiveInject(i0.ElementRef));\n    };\n  }\n  /** @nocollapse */\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: VgCuePointsDirective,\n      selectors: [[\"\", \"vgCuePoints\", \"\"]],\n      outputs: {\n        onEnterCuePoint: \"onEnterCuePoint\",\n        onUpdateCuePoint: \"onUpdateCuePoint\",\n        onExitCuePoint: \"onExitCuePoint\",\n        onCompleteCuePoint: \"onCompleteCuePoint\"\n      }\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(VgCuePointsDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[vgCuePoints]'\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }];\n  }, {\n    onEnterCuePoint: [{\n      type: Output\n    }],\n    onUpdateCuePoint: [{\n      type: Output\n    }],\n    onExitCuePoint: [{\n      type: Output\n    }],\n    onCompleteCuePoint: [{\n      type: Output\n    }]\n  });\n})();\nclass VgMediaDirective {\n  constructor(api, ref) {\n    this.api = api;\n    this.ref = ref;\n    this.state = VgStates.VG_PAUSED;\n    this.time = {\n      current: 0,\n      total: 0,\n      left: 0\n    };\n    this.buffer = {\n      end: 0\n    };\n    this.canPlay = false;\n    this.canPlayThrough = false;\n    this.isMetadataLoaded = false;\n    this.isWaiting = false;\n    this.isCompleted = false;\n    this.isLive = false;\n    this.isBufferDetected = false;\n    this.checkInterval = 200;\n    this.currentPlayPos = 0;\n    this.lastPlayPos = 0;\n    this.playAtferSync = false;\n    this.bufferDetected = new Subject();\n  }\n  ngOnInit() {\n    if (this.vgMedia.nodeName) {\n      // It's a native element\n      this.elem = this.vgMedia;\n    } else {\n      // It's an Angular Class\n      this.elem = this.vgMedia.elem;\n    }\n    // Just in case we're creating this vgMedia dynamically register again into API\n    this.api.registerMedia(this);\n    this.subscriptions = {\n      // Native events\n      abort: fromEvent(this.elem, VgEvents.VG_ABORT),\n      canPlay: fromEvent(this.elem, VgEvents.VG_CAN_PLAY),\n      canPlayThrough: fromEvent(this.elem, VgEvents.VG_CAN_PLAY_THROUGH),\n      durationChange: fromEvent(this.elem, VgEvents.VG_DURATION_CHANGE),\n      emptied: fromEvent(this.elem, VgEvents.VG_EMPTIED),\n      encrypted: fromEvent(this.elem, VgEvents.VG_ENCRYPTED),\n      ended: fromEvent(this.elem, VgEvents.VG_ENDED),\n      error: fromEvent(this.elem, VgEvents.VG_ERROR),\n      loadedData: fromEvent(this.elem, VgEvents.VG_LOADED_DATA),\n      loadedMetadata: fromEvent(this.elem, VgEvents.VG_LOADED_METADATA),\n      loadStart: fromEvent(this.elem, VgEvents.VG_LOAD_START),\n      pause: fromEvent(this.elem, VgEvents.VG_PAUSE),\n      play: fromEvent(this.elem, VgEvents.VG_PLAY),\n      playing: fromEvent(this.elem, VgEvents.VG_PLAYING),\n      progress: fromEvent(this.elem, VgEvents.VG_PROGRESS),\n      rateChange: fromEvent(this.elem, VgEvents.VG_RATE_CHANGE),\n      seeked: fromEvent(this.elem, VgEvents.VG_SEEKED),\n      seeking: fromEvent(this.elem, VgEvents.VG_SEEKING),\n      stalled: fromEvent(this.elem, VgEvents.VG_STALLED),\n      suspend: fromEvent(this.elem, VgEvents.VG_SUSPEND),\n      timeUpdate: fromEvent(this.elem, VgEvents.VG_TIME_UPDATE),\n      volumeChange: fromEvent(this.elem, VgEvents.VG_VOLUME_CHANGE),\n      waiting: fromEvent(this.elem, VgEvents.VG_WAITING),\n      // Advertisement only events\n      startAds: fromEvent(window, VgEvents.VG_START_ADS),\n      endAds: fromEvent(window, VgEvents.VG_END_ADS),\n      // See changes on <source> child elements to reload the video file\n      mutation: new Observable(observer => {\n        const domObs = new MutationObserver(mutations => {\n          observer.next(mutations);\n        });\n        domObs.observe(this.elem, {\n          childList: true,\n          attributes: true\n        });\n        return () => {\n          domObs.disconnect();\n        };\n      }),\n      // Custom buffering detection\n      bufferDetected: this.bufferDetected\n    };\n    this.mutationObs = this.subscriptions.mutation.subscribe(this.onMutation.bind(this));\n    this.canPlayObs = this.subscriptions.canPlay.subscribe(this.onCanPlay.bind(this));\n    this.canPlayThroughObs = this.subscriptions.canPlayThrough.subscribe(this.onCanPlayThrough.bind(this));\n    this.loadedMetadataObs = this.subscriptions.loadedMetadata.subscribe(this.onLoadMetadata.bind(this));\n    this.waitingObs = this.subscriptions.waiting.subscribe(this.onWait.bind(this));\n    this.progressObs = this.subscriptions.progress.subscribe(this.onProgress.bind(this));\n    this.endedObs = this.subscriptions.ended.subscribe(this.onComplete.bind(this));\n    this.playingObs = this.subscriptions.playing.subscribe(this.onStartPlaying.bind(this));\n    this.playObs = this.subscriptions.play.subscribe(this.onPlay.bind(this));\n    this.pauseObs = this.subscriptions.pause.subscribe(this.onPause.bind(this));\n    this.timeUpdateObs = this.subscriptions.timeUpdate.subscribe(this.onTimeUpdate.bind(this));\n    this.volumeChangeObs = this.subscriptions.volumeChange.subscribe(this.onVolumeChange.bind(this));\n    this.errorObs = this.subscriptions.error.subscribe(this.onError.bind(this));\n    if (this.vgMaster) {\n      this.api.playerReadyEvent.subscribe(() => {\n        this.prepareSync();\n      });\n    }\n  }\n  prepareSync() {\n    const canPlayAll = [];\n    for (const media in this.api.medias) {\n      if (this.api.medias[media]) {\n        canPlayAll.push(this.api.medias[media].subscriptions.canPlay);\n      }\n    }\n    this.canPlayAllSubscription = combineLatest(canPlayAll).pipe(map((...params) => {\n      const checkReadyState = event => {\n        if (!event?.target) {\n          return false;\n        }\n        return event.target.readyState === 4;\n      };\n      const allReady = params.some(checkReadyState);\n      if (allReady && !this.syncSubscription) {\n        this.startSync();\n        this.syncSubscription.unsubscribe();\n      }\n    })).subscribe();\n  }\n  startSync() {\n    this.syncSubscription = timer(0, 1000).subscribe(() => {\n      for (const media in this.api.medias) {\n        if (this.api.medias[media] !== this) {\n          const diff = this.api.medias[media].currentTime - this.currentTime;\n          if (diff < -0.3 || diff > 0.3) {\n            this.playAtferSync = this.state === VgStates.VG_PLAYING;\n            this.pause();\n            this.api.medias[media].pause();\n            this.api.medias[media].currentTime = this.currentTime;\n          } else {\n            if (this.playAtferSync) {\n              this.play();\n              this.api.medias[media].play();\n              this.playAtferSync = false;\n            }\n          }\n        }\n      }\n    });\n  }\n  onMutation(mutations) {\n    // Detect changes only for source elements or src attribute\n    for (let i = 0, l = mutations.length; i < l; i++) {\n      const mut = mutations[i];\n      if (mut.type === 'attributes' && mut.attributeName === 'src') {\n        // Only load src file if it's not a blob (for DASH / HLS sources)\n        if (mut.target.src && mut.target.src.length > 0 && mut.target.src.indexOf('blob:') < 0) {\n          this.loadMedia();\n          break;\n        }\n      } else if (mut.type === 'childList' && mut.removedNodes.length && mut.removedNodes[0].nodeName.toLowerCase() === 'source') {\n        this.loadMedia();\n        break;\n      }\n    }\n  }\n  loadMedia() {\n    this.vgMedia.pause();\n    this.vgMedia.currentTime = 0;\n    // Start buffering until we can play the media file\n    this.stopBufferCheck();\n    this.isBufferDetected = true;\n    this.bufferDetected.next(this.isBufferDetected);\n    // TODO: This is ugly, we should find something cleaner. For some reason a TimerObservable doesn't works.\n    setTimeout(() => this.vgMedia.load(), 10);\n  }\n  play() {\n    // short-circuit if already playing\n    if (this.playPromise || this.state !== VgStates.VG_PAUSED && this.state !== VgStates.VG_ENDED) {\n      return;\n    }\n    this.playPromise = this.vgMedia.play();\n    // browser has async play promise\n    if (this.playPromise && this.playPromise.then && this.playPromise.catch) {\n      this.playPromise.then(() => {\n        this.playPromise = null;\n      }).catch(() => {\n        this.playPromise = null;\n        // deliberately empty for the sake of eating console noise\n      });\n    }\n    return this.playPromise;\n  }\n  pause() {\n    // browser has async play promise\n    if (this.playPromise) {\n      this.playPromise.then(() => {\n        this.vgMedia.pause();\n      });\n    } else {\n      this.vgMedia.pause();\n    }\n  }\n  get id() {\n    // We should return undefined if vgMedia still doesn't exist\n    let result;\n    if (this.vgMedia) {\n      result = this.vgMedia.id;\n    }\n    return result;\n  }\n  get duration() {\n    return this.vgMedia.duration === Infinity ? this.specifiedDuration : this.vgMedia.duration;\n  }\n  set currentTime(seconds) {\n    this.vgMedia.currentTime = seconds;\n    // this.elem.dispatchEvent(new CustomEvent(VgEvents.VG_SEEK));\n  }\n  get currentTime() {\n    return this.vgMedia.currentTime;\n  }\n  set volume(volume) {\n    this.vgMedia.volume = volume;\n  }\n  get volume() {\n    return this.vgMedia.volume;\n  }\n  set playbackRate(rate) {\n    this.vgMedia.playbackRate = rate;\n  }\n  get playbackRate() {\n    return this.vgMedia.playbackRate;\n  }\n  get buffered() {\n    return this.vgMedia.buffered;\n  }\n  get textTracks() {\n    return this.vgMedia.textTracks;\n  }\n  // @ts-ignore\n  onCanPlay(event) {\n    this.isBufferDetected = false;\n    this.bufferDetected.next(this.isBufferDetected);\n    this.canPlay = true;\n    this.ref.detectChanges();\n  }\n  // @ts-ignore\n  onCanPlayThrough(event) {\n    this.isBufferDetected = false;\n    this.bufferDetected.next(this.isBufferDetected);\n    this.canPlayThrough = true;\n    this.ref.detectChanges();\n  }\n  // @ts-ignore\n  onLoadMetadata(event) {\n    this.isMetadataLoaded = true;\n    this.time = {\n      current: 0,\n      left: 0,\n      total: this.duration * 1000\n    };\n    this.state = VgStates.VG_PAUSED;\n    // Live streaming check\n    const t = Math.round(this.time.total);\n    this.isLive = t === Infinity;\n    this.ref.detectChanges();\n  }\n  // @ts-ignore\n  onWait(event) {\n    this.isWaiting = true;\n    this.ref.detectChanges();\n  }\n  // @ts-ignore\n  onComplete(event) {\n    this.isCompleted = true;\n    this.state = VgStates.VG_ENDED;\n    this.ref.detectChanges();\n  }\n  // @ts-ignore\n  onStartPlaying(event) {\n    this.state = VgStates.VG_PLAYING;\n    this.ref.detectChanges();\n  }\n  // @ts-ignore\n  onPlay(event) {\n    this.state = VgStates.VG_PLAYING;\n    if (this.vgMaster) {\n      if (!this.syncSubscription || this.syncSubscription.closed) {\n        this.startSync();\n      }\n    }\n    this.startBufferCheck();\n    this.ref.detectChanges();\n  }\n  // @ts-ignore\n  onPause(event) {\n    this.state = VgStates.VG_PAUSED;\n    if (this.vgMaster) {\n      if (!this.playAtferSync) {\n        this.syncSubscription.unsubscribe();\n      }\n    }\n    this.stopBufferCheck();\n    this.ref.detectChanges();\n  }\n  // @ts-ignore\n  onTimeUpdate(event) {\n    const end = this.buffered.length - 1;\n    this.time = {\n      current: this.currentTime * 1000,\n      total: this.time.total,\n      left: (this.duration - this.currentTime) * 1000\n    };\n    if (end >= 0) {\n      this.buffer = {\n        end: this.buffered.end(end) * 1000\n      };\n    }\n    this.ref.detectChanges();\n  }\n  // @ts-ignore\n  onProgress(event) {\n    const end = this.buffered.length - 1;\n    if (end >= 0) {\n      this.buffer = {\n        end: this.buffered.end(end) * 1000\n      };\n    }\n    this.ref.detectChanges();\n  }\n  // @ts-ignore\n  onVolumeChange(event) {\n    // TODO: Save to localstorage the current volume\n    this.ref.detectChanges();\n  }\n  // @ts-ignore\n  onError(event) {\n    // TODO: Handle error messages\n    this.ref.detectChanges();\n  }\n  // http://stackoverflow.com/a/23828241/779529\n  bufferCheck() {\n    const offset = 1 / this.checkInterval;\n    this.currentPlayPos = this.currentTime;\n    if (!this.isBufferDetected && this.currentPlayPos < this.lastPlayPos + offset) {\n      this.isBufferDetected = true;\n    }\n    if (this.isBufferDetected && this.currentPlayPos > this.lastPlayPos + offset) {\n      this.isBufferDetected = false;\n    }\n    // Prevent calls to bufferCheck after ngOnDestroy have been called\n    if (!this.bufferDetected.closed) {\n      this.bufferDetected.next(this.isBufferDetected);\n    }\n    this.lastPlayPos = this.currentPlayPos;\n  }\n  startBufferCheck() {\n    this.checkBufferSubscription = timer(0, this.checkInterval).subscribe(() => {\n      this.bufferCheck();\n    });\n  }\n  stopBufferCheck() {\n    if (this.checkBufferSubscription) {\n      this.checkBufferSubscription.unsubscribe();\n    }\n    this.isBufferDetected = false;\n    this.bufferDetected.next(this.isBufferDetected);\n  }\n  seekTime(value, byPercent = false) {\n    let second;\n    const duration = this.duration;\n    if (byPercent) {\n      second = value * duration / 100;\n    } else {\n      second = value;\n    }\n    this.currentTime = second;\n  }\n  addTextTrack(type, label, language, mode) {\n    const newTrack = this.vgMedia.addTextTrack(type, label, language);\n    if (mode) {\n      newTrack.mode = mode;\n    }\n    return newTrack;\n  }\n  ngOnDestroy() {\n    this.vgMedia.src = '';\n    this.mutationObs?.unsubscribe();\n    this.canPlayObs?.unsubscribe();\n    this.canPlayThroughObs?.unsubscribe();\n    this.loadedMetadataObs?.unsubscribe();\n    this.waitingObs?.unsubscribe();\n    this.progressObs?.unsubscribe();\n    this.endedObs?.unsubscribe();\n    this.playingObs?.unsubscribe();\n    this.playObs?.unsubscribe();\n    this.pauseObs?.unsubscribe();\n    this.timeUpdateObs?.unsubscribe();\n    this.volumeChangeObs?.unsubscribe();\n    this.errorObs?.unsubscribe();\n    this.checkBufferSubscription?.unsubscribe();\n    this.syncSubscription?.unsubscribe();\n    this.bufferDetected?.complete();\n    this.bufferDetected?.unsubscribe();\n    this.api.unregisterMedia(this);\n  }\n  /** @nocollapse */\n  static {\n    this.ɵfac = function VgMediaDirective_Factory(t) {\n      return new (t || VgMediaDirective)(i0.ɵɵdirectiveInject(VgApiService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n    };\n  }\n  /** @nocollapse */\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: VgMediaDirective,\n      selectors: [[\"\", \"vgMedia\", \"\"]],\n      inputs: {\n        vgMedia: \"vgMedia\",\n        vgMaster: \"vgMaster\"\n      }\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(VgMediaDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[vgMedia]'\n    }]\n  }], function () {\n    return [{\n      type: VgApiService\n    }, {\n      type: i0.ChangeDetectorRef\n    }];\n  }, {\n    vgMedia: [{\n      type: Input\n    }],\n    vgMaster: [{\n      type: Input\n    }]\n  });\n})();\nclass VgPlayerComponent {\n  constructor(ref, api, fsAPI, controlsHidden) {\n    this.api = api;\n    this.fsAPI = fsAPI;\n    this.controlsHidden = controlsHidden;\n    this.isFullscreen = false;\n    this.isNativeFullscreen = false;\n    this.areControlsHidden = false;\n    this.onPlayerReady = new EventEmitter();\n    this.onMediaReady = new EventEmitter();\n    this.subscriptions = [];\n    this.elem = ref.nativeElement;\n    this.api.registerElement(this.elem);\n  }\n  ngAfterContentInit() {\n    this.medias.toArray().forEach(media => {\n      this.api.registerMedia(media);\n    });\n    this.fsAPI.init(this.elem, this.medias);\n    this.subscriptions.push(this.fsAPI.onChangeFullscreen.subscribe(this.onChangeFullscreen.bind(this)));\n    this.subscriptions.push(this.controlsHidden.isHidden.subscribe(this.onHideControls.bind(this)));\n    this.api.onPlayerReady(this.fsAPI);\n    this.onPlayerReady.emit(this.api);\n  }\n  onChangeFullscreen(fsState) {\n    if (!this.fsAPI.nativeFullscreen) {\n      this.isFullscreen = fsState;\n      this.zIndex = fsState ? VgUtilsService.getZIndex().toString() : 'auto';\n    } else {\n      this.isNativeFullscreen = fsState;\n    }\n  }\n  onHideControls(hidden) {\n    this.areControlsHidden = hidden;\n  }\n  ngOnDestroy() {\n    this.subscriptions.forEach(s => s.unsubscribe());\n  }\n  /** @nocollapse */\n  static {\n    this.ɵfac = function VgPlayerComponent_Factory(t) {\n      return new (t || VgPlayerComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(VgApiService), i0.ɵɵdirectiveInject(VgFullscreenApiService), i0.ɵɵdirectiveInject(VgControlsHiddenService));\n    };\n  }\n  /** @nocollapse */\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: VgPlayerComponent,\n      selectors: [[\"vg-player\"]],\n      contentQueries: function VgPlayerComponent_ContentQueries(rf, ctx, dirIndex) {\n        if (rf & 1) {\n          i0.ɵɵcontentQuery(dirIndex, VgMediaDirective, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.medias = _t);\n        }\n      },\n      hostVars: 8,\n      hostBindings: function VgPlayerComponent_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵstyleProp(\"z-index\", ctx.zIndex);\n          i0.ɵɵclassProp(\"fullscreen\", ctx.isFullscreen)(\"native-fullscreen\", ctx.isNativeFullscreen)(\"controls-hidden\", ctx.areControlsHidden);\n        }\n      },\n      outputs: {\n        onPlayerReady: \"onPlayerReady\",\n        onMediaReady: \"onMediaReady\"\n      },\n      features: [i0.ɵɵProvidersFeature([VgApiService, VgFullscreenApiService, VgControlsHiddenService])],\n      ngContentSelectors: _c0,\n      decls: 1,\n      vars: 0,\n      template: function VgPlayerComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef();\n          i0.ɵɵprojection(0);\n        }\n      },\n      styles: [\"vg-player{font-family:videogular;position:relative;display:flex;width:100%;height:100%;overflow:hidden;background-color:#000}vg-player.fullscreen{position:fixed;left:0;top:0}vg-player.native-fullscreen.controls-hidden{cursor:none}\\n\"],\n      encapsulation: 2\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(VgPlayerComponent, [{\n    type: Component,\n    args: [{\n      selector: 'vg-player',\n      encapsulation: ViewEncapsulation.None,\n      template: `<ng-content></ng-content>`,\n      providers: [VgApiService, VgFullscreenApiService, VgControlsHiddenService],\n      styles: [\"vg-player{font-family:videogular;position:relative;display:flex;width:100%;height:100%;overflow:hidden;background-color:#000}vg-player.fullscreen{position:fixed;left:0;top:0}vg-player.native-fullscreen.controls-hidden{cursor:none}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: VgApiService\n    }, {\n      type: VgFullscreenApiService\n    }, {\n      type: VgControlsHiddenService\n    }];\n  }, {\n    isFullscreen: [{\n      type: HostBinding,\n      args: ['class.fullscreen']\n    }],\n    isNativeFullscreen: [{\n      type: HostBinding,\n      args: ['class.native-fullscreen']\n    }],\n    areControlsHidden: [{\n      type: HostBinding,\n      args: ['class.controls-hidden']\n    }],\n    zIndex: [{\n      type: HostBinding,\n      args: ['style.z-index']\n    }],\n    onPlayerReady: [{\n      type: Output\n    }],\n    onMediaReady: [{\n      type: Output\n    }],\n    medias: [{\n      type: ContentChildren,\n      args: [VgMediaDirective, {\n        descendants: true\n      }]\n    }]\n  });\n})();\nconst services = [VgApiService, VgControlsHiddenService, VgFullscreenApiService, VgUtilsService, VgEvents, VgStates];\nconst directives = [VgCuePointsDirective, VgMediaDirective];\nclass VgCoreModule {\n  /** @nocollapse */static {\n    this.ɵfac = function VgCoreModule_Factory(t) {\n      return new (t || VgCoreModule)();\n    };\n  }\n  /** @nocollapse */\n  static {\n    this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: VgCoreModule,\n      declarations: [VgCuePointsDirective, VgMediaDirective, VgPlayerComponent],\n      imports: [CommonModule],\n      exports: [VgCuePointsDirective, VgMediaDirective, VgPlayerComponent]\n    });\n  }\n  /** @nocollapse */\n  static {\n    this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      providers: [...services],\n      imports: [CommonModule]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(VgCoreModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      providers: [...services],\n      declarations: [...directives, VgPlayerComponent],\n      exports: [...directives, VgPlayerComponent]\n    }]\n  }], null, null);\n})();\nclass VgMediaElement {\n  get audioTracks() {\n    return null;\n  }\n  // @ts-ignore\n  addTextTrack(kind, label, language) {\n    return null;\n  }\n  // @ts-ignore\n  canPlayType(type) {\n    return null;\n  }\n  load() {}\n  msClearEffects() {}\n  msGetAsCastingSource() {\n    return null;\n  }\n  // @ts-ignore\n  msInsertAudioEffect(_activatableClassId, _effectRequired, _config) {}\n  // @ts-ignore\n  msSetMediaProtectionManager(mediaProtectionManager) {}\n  pause() {}\n  play() {\n    return null;\n  }\n  // @ts-ignore\n  setMediaKeys(mediaKeys) {\n    return null;\n  }\n  // @ts-ignore\n  addEventListener(_type, _listener, _useCapture) {}\n}\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { VgApiService, VgControlsHiddenService, VgCoreModule, VgCuePointsDirective, VgEvents, VgFullscreenApiService, VgMediaDirective, VgMediaElement, VgPlayerComponent, VgStates, VgUtilsService };\n"],
  "mappings": "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",
  "names": []
}
