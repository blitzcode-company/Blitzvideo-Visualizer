import Player from '../player'
import DanmuJs from 'danmu.js'
import util from '../utils/util'
import '../style/player/bullet.scss'

let danmu = function () {
  let player = this
  if (player.config.danmu) {
    let container = Player.util.createDom('xg-bullet', '', {}, 'xgplayer-bullet')
    player.root.appendChild(container)
    container.style.height = '100%'
    let config = Player.util.deepCopy({
      container,
      // containerStyle: {
      //   zIndex: 9
      // },
      player: player.video,
      comments: [],
      area: {
        start: 0,
        end: 1
      }
    }, player.config.danmu)

    let onComplete = () => {
      let danmujs = new DanmuJs(config)
      Player.util.addClass(container, 'xgplayer-has-bullet')

      if (!player.config.danmu.closeDefaultBtn) {
        player.bulletBtn = Player.util.copyDom(danmujs.bulletBtn.createSwitch(true))
        player.controls.appendChild(player.bulletBtn);

        ['click', 'touchend'].forEach(item => {
          player.bulletBtn.addEventListener(item, function (e) {
            e.preventDefault()
            e.stopPropagation()
            Player.util.toggleClass(player.bulletBtn, 'danmu-switch-active')
            if (Player.util.hasClass(player.bulletBtn, 'danmu-switch-active')) {
              Player.util.addClass(container, 'xgplayer-has-bullet')
              util.once(player, 'timeupdate', () => {
                danmujs.start()
              })
            } else {
              Player.util.removeClass(container, 'xgplayer-has-bullet')
              danmujs.stop()
            }
          }, false)
        })

        player.onElementClick && container.addEventListener('click', function (e) { player.onElementClick(e, container) }, false)
        player.onElementDblclick && container.addEventListener('dblclick', function (e) { player.onElementDblclick(e, container) }, false)

        let onWaiting = () => {
          if (Player.util.hasClass(player.bulletBtn, 'danmu-switch-active')) {
            danmujs.pause()
          }
        }
        util.on(player, 'waiting', onWaiting, 'destroy')

        let onPause = () => {
          if (Player.util.hasClass(player.bulletBtn, 'danmu-switch-active')) {
            danmujs.pause()
          }
        }
        util.on(player, 'pause', onPause, 'destroy')

        let onPlay = () => {
          if (Player.util.hasClass(player.bulletBtn, 'danmu-switch-active')) {
            danmujs.play()
          }
        }
        util.on(player, 'play', onPlay, 'destroy')

        let onPlaying = () => {
          if (Player.util.hasClass(player.bulletBtn, 'danmu-switch-active')) {
            danmujs.play()
          }
        }
        util.on(player, 'playing', onPlaying, 'destroy')

        let onSeeked = () => {
          if (Player.util.hasClass(player.bulletBtn, 'danmu-switch-active')) {
            danmujs.stop()
            danmujs.start()
          }
        }
        util.on(player, 'seeked', onSeeked, 'destroy')

        util.once(danmujs, 'destroy', () => {
          player.off('waiting', onWaiting)
          player.off('pause', onPause)
          player.off('play', onPlay)
          player.off('playing', onPlaying)
          player.off('seeked', onSeeked)
        })
      }

      player.danmu = danmujs
      player.emit('initDefaultDanmu', danmujs)
    }
    util.once(player, 'complete', onComplete)
  }
}

export default {
  name: 'danmu',
  method: danmu
}